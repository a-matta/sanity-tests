[tool.poetry]
name = "sanity-tests"
version = "0.1.0"
description = ""
authors = ["Amrita Matta <matta.amrita@gmail.com>"]
readme = "README.md"
packages = [{ include = "libs" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
assertpy = "^1.1"
faker = "^24.9.0"
playwright = "^1.43.0"
pydantic = "^2.7.0"
pytest = "^8.1.1"
pytest-playwright = "^0.4.4"
pytest-html = "^4.1.1"
pytest-xdist = "^3.5.0"

[tool.poetry.group.dev.dependencies]
black = "^24.4.0"
invoke = "^2.2.0"
isort = "^5.13.2"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
pylint = "^3.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = """
    -s
"""
# log_cli : pytest will output logging records as they are emitted directly into the console.
# Otherwise, the log is printed to console only if the test fails.
# log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

log_file = "pytest.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

[tool.mypy]
show_error_codes = true

[tool.black]
line-length = 120
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 120

[tool.pylint.'FORMAT CHECKER']
max-line-length = 120
